package com.example.ecommerce.model;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;

/**
 * Represents an item in a customer's order, including product details and quantity.
 * Implements the Builder pattern for flexible instantiation.
 */
@Entity(tableName = "order_items")
public class OrderItem {

    // empty constructor required by Room
    public OrderItem() {
    }

    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "order_item_id")
    private int orderItemId;

    @ColumnInfo(name = "order_id")
    private int orderId;

    @ColumnInfo(name = "product_id")
    private int productId;

    @ColumnInfo(name = "quantity")
    private int quantity;

    /**
     * Private constructor used by the Builder to create an OrderItem instance.
     */
    private OrderItem(OrderItemBuilder builder) {
        this.orderItemId = builder.orderItemId;
        this.orderId = builder.orderId;
        this.productId = builder.productId;
        this.quantity = builder.quantity;
    }

    // Setters
    public void setOrderId(int orderId) {
        this.orderId = orderId;
    }

    public void setProductId(int productId) {
        this.productId = productId;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    // Getters
    public int getOrderItemId() {
        return orderItemId;
    }

    public int getOrderId() {
        return orderId;
    }

    public int getProductId() {
        return productId;
    }

    public int getQuantity() {
        return quantity;
    }

    // Setter for orderItemId
    public void setOrderItemId(int orderItemId) {
        this.orderItemId = orderItemId;
    }

    /**
     * Builder class for creating instances of OrderItem.
     */
    public static class OrderItemBuilder {
        private int orderItemId; // Default value (can be set later for auto-generated ID)
        private final int orderId; // Required field
        private final int productId; // Required field
        private final int quantity; // Required field

        /**
         * Constructor for the required fields of OrderItem.
         *
         * @param orderId   ID of the associated order.
         * @param productId ID of the product in the order.
         * @param quantity  Quantity of the product ordered.
         */
        public OrderItemBuilder(int orderId, int productId, int quantity) {
            this.orderId = orderId;
            this.productId = productId;
            this.quantity = quantity;
        }

        /**
         * Optional method to set the orderItemId (usually auto-generated by the database).
         *
         * @param orderItemId The ID of the order item.
         * @return The builder instance for method chaining.
         */
        public OrderItemBuilder withOrderItemId(int orderItemId) {
            this.orderItemId = orderItemId;
            return this;
        }

        /**
         * Builds and returns an instance of OrderItem.
         *
         * @return A new OrderItem instance.
         */
        public OrderItem build() {
            return new OrderItem(this);
        }
    }
}
